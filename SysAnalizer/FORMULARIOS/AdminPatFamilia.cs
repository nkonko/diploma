// <auto-generated/>
namespace UI
{
    using BE.Entidades;
    using BLL;
    using System;
    using System.Collections.Generic;
    using System.Windows.Forms;

    public partial class AdminPatFamilia : Form, IAdminPatFamilia
    {
        public List<Patente> patentesSeleccionadas = null;
        private Familia familia = null;

        private readonly IPatenteBLL patenteBLL;
        private IFamilias familias;

        public bool familiaNueva;

        public bool FamiliaNueva
        {
            get { return familiaNueva; }
            set { familiaNueva = value; }
        }

        public AdminPatFamilia(IPatenteBLL patenteBLL)
        {
            InitializeComponent();
            this.patenteBLL = patenteBLL;
        }

        public void AsignarPatente(int familiaId, int patenteId)
        {
            var asignadas = patenteBLL.AsignarPatente(familiaId, patenteId);
            if (asignadas)
            {
                DialogResult = DialogResult.OK;
            }
        }

        public void BorrarPatente(int familiaId, int patenteId)
        {
            var negadas = patenteBLL.BorrarPatente(familiaId, patenteId);
            if (negadas)
            {
                DialogResult = DialogResult.OK;
            }
        }

        public List<Patente> ObtenerPatentesSeleccion()
        {
            return patentesSeleccionadas;
        }

        private void AdminPatFamilia_Load(object sender, EventArgs e)
        {
            familias = IoCContainer.Resolve<IFamilias>();
            familia = familias.ObtenerFamiliaSeleccionada();
            lblFamilia.Text = lblFamilia.Text + " " + familia.Descripcion;
            lstPatentes.DataSource = patenteBLL.Cargar();
        }

        private void lstPatentes_SelectedIndexChanged(object sender, EventArgs e)
        {
        }

        private void lstPatentes_ItemCheck(object sender, ItemCheckEventArgs e)
        {
            var patenteSel = new Patente();

            if (FamiliaNueva)
            {
                FamiliaNueva = false;

                patenteSel = (Patente)lstPatentes.SelectedItem;

                AsignarPatente(familia.FamiliaId, patenteSel.IdPatente);
            }
            else
            {
                patenteSel = (Patente)lstPatentes.SelectedItem;

                var patentes = patenteBLL.ConsultarPatenteFamilia(familia.FamiliaId);

                if (patentes.Exists(x => x.IdPatente == patenteSel.IdPatente))
                {
                    BorrarPatente(familia.FamiliaId, patenteSel.IdPatente);
                }
            }

        }
    }
}
