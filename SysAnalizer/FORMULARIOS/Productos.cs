// <auto-generated/>
namespace UI
{
    using BE.Entidades;
    using BLL;
    using System;
    using System.Windows.Forms;

    public partial class Productos : Form, IProductos
    {
        private readonly IProductoBLL productoBLL;

        private Producto productoSeleccionado = new Producto();

        public bool formUserClose = true;

        public Productos(IProductoBLL productoBLL)
        {
            this.productoBLL = productoBLL;
            InitializeComponent();
        }

        private void Productos_Load(object sender, EventArgs e)
        {
            dgProd.AutoGenerateColumns = false;
            productoSeleccionado = null;
            CargarProductos();
        }

        private void btnNuevo_Click(object sender, EventArgs e)
        {
            var exito = productoBLL.Crear(new Producto() { Descripcion = txtDescripcion.Text, PVenta = float.Parse(txtPcosto.Text), PUnitario = float.Parse(txtPunitario.Text), Stock = int.Parse(txtCantidad.Text), MinStock = int.Parse(txtMinStock.Text) });

            if (exito)
            {
                MessageBox.Show("Producto Creado");
                CargarProductos();
            }
        }

        private void btnModificar_Click(object sender, EventArgs e)
        {
            var exito = productoBLL.Actualizar(productoSeleccionado);

            if (exito)
            {
                MessageBox.Show("Producto Actualizado");
                CargarProductos();
            }
        }

        private void btnBorrar_Click(object sender, EventArgs e)
        {
            var exito = productoBLL.Borrar(productoSeleccionado);

            if (exito)
            {
                MessageBox.Show("Producto Borrado");
                CargarProductos();
            }
        }

        private void btnVolver_Click(object sender, EventArgs e)
        {
            Hide();
        }

        private void btnSelVta_Click(object sender, EventArgs e)
        {
            ActualizarSeleccionado();

            formUserClose = false;
            DialogResult = DialogResult.OK;
        }

        public Producto ObtenerProductoSeleccionado()
        {
            return productoSeleccionado;
        }

        private void Productos_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (formUserClose)
            {
                e.Cancel = true;
            }
            Hide();
        }

        private void btnInactivos_Click(object sender, EventArgs e)
        {

        }

        private void dgProd_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            ActualizarSeleccionado();
            CargaControles();
        }

        private void ActualizarSeleccionado()
        {
            productoSeleccionado = (Producto)dgProd.CurrentRow.DataBoundItem;
        }

        private void CargaControles()
        {
            FormExtensions.CatchException(this, () =>
            {
                txtDescripcion.Text = productoSeleccionado.Descripcion;
                txtPunitario.Text = productoSeleccionado.PUnitario.ToString();
                txtPcosto.Text = productoSeleccionado.PVenta.ToString();
                txtCantidad.Text = productoSeleccionado.Stock.ToString();
                txtMinStock.Text = productoSeleccionado.MinStock.ToString();
                CambiarNroCliente();
            });
        }

        private void CambiarNroCliente()
        {
            lblNroProd.Text = lblNroProd.Text.Length != 12
                            ? lblNroProd.Text.Substring(0, 12)
                            : lblNroProd.Text + productoSeleccionado.ProductoId;

            if (lblNroProd.Text.Length == 12)
            {
                lblNroProd.Text += productoSeleccionado.ProductoId;
            }
        }

        private void CargarProductos()
        {
            dgProd.DataSource = productoBLL.Cargar();
        }
    }
}
